name: "sugar-refine"
tag: "${data.mesh_name}_${system.loss.lambda_rgb}RGB_${system.loss.lambda_mask}M_${trainer.max_steps}steps_N${system.loss.lambda_normal}_D${system.loss.lambda_depth}"
exp_root_dir: "outputs"
seed: 61

data_type: "single-image-gs-datamodule"
data: # threestudio/data/image.py -> SingleImageDataModuleConfig
  mesh_name: ???
  first_frame_path: input/${data.mesh_name}/train/rgb/000000.png
  train_data_path : input/${data.mesh_name}/train
  val_data_path: input/${data.mesh_name}/val
  test_data_path: input/${data.mesh_name}/test
  height: 256
  width: 256
  # resolution_milestones: [200, 300]
  use_random_camera: true
  default_elevation_deg: 5.0
  default_azimuth_deg: 0.0
  default_camera_distance: 3.8
  default_fovy_deg: 20.0
  batch_size: 1
  requires_depth: ${cmaxgt0orcmaxgt0:${system.loss.lambda_depth},${system.loss.lambda_depth_rel}}
  requires_normal: ${cmaxgt0:${system.loss.lambda_normal}}
  random_camera: # threestudio/data/uncond.py -> RandomCameraDataModuleConfig
    height: 256
    width: 256
    batch_size: 4
    eval_height: 256
    eval_width: 256
    eval_batch_size: 1
    elevation_range: [-10, 80]
    azimuth_range: [-180, 180]
    camera_distance_range: [3.8, 3.8]
    fovy_range: [20.0, 20.0] # Zero123 has fixed fovy
    progressive_until: 0
    camera_perturb: 0.0
    center_perturb: 0.0
    up_perturb: 0.0
    light_position_perturb: 1.0
    light_distance_range: [7.5, 10.0]
    eval_elevation_deg: ${data.default_elevation_deg}
    eval_camera_distance: ${data.default_camera_distance}
    eval_fovy_deg: ${data.default_fovy_deg}
    light_sample_strategy: "dreamfusion"
    batch_uniform_azimuth: False
    n_val_views: 30
    n_test_views: 120
    rays_d_normalize: false

system_type: "sugar-static-system"
system:
  stage: sugar
  postprocess: false

  geometry_type: "sugar"
  geometry:
    position_lr: 0.00016 # [0, 0.00048, 0.0000016, 3000] # 0.0025, 0.05
    scaling_lr: 0.005
    feature_lr: 0.0050
    opacity_lr: 0.05
    rotation_lr: 0.001

    spatial_extent: ${data.default_camera_distance}
    spatial_lr_scale: 1

    n_gaussians_per_surface_triangle: 6
    learnable_positions: true
    surface_mesh_to_bind_path: input/meshes/${data.mesh_name}/${data.mesh_name}.obj

    init_gs_opacity: 0.9

    init_gs_scales_s: 1.3
    dynamic_stage: false

  renderer_type: "diff-sugar-rasterizer-normal"
  renderer:
    debug: false
    invert_bg_prob: 1.0
    back_ground_color: [0.0, 0.0, 0.0]

  material_type: "no-material" # unused
  material:
    n_output_dims: 0

  background_type: "solid-color-background" # unused

  prompt_processor_type: "dummy-prompt-processor" # Zero123 doesn't use prompts
  prompt_processor:
    pretrained_model_name_or_path: ""
    prompt: ""

  guidance_type: "stable-zero123-guidance"
  guidance:
    pretrained_config: "./load/zero123/sd-objaverse-finetune-c_concat-256.yaml"
    pretrained_model_name_or_path: ???
    vram_O: ${not:${gt0:${system.freq.guidance_eval}}}
    cond_image_path: ${data.first_frame_path}
    cond_elevation_deg: ${data.default_elevation_deg}
    cond_azimuth_deg: ${data.default_azimuth_deg}
    cond_camera_distance: ${data.default_camera_distance}
    guidance_scale: 3.5
    min_step_percent: 0.02 # 0.2
    max_step_percent: 0.2 # 0.5


  freq:
    ref_only_steps: 0
    guidance_eval: 0
    input_normal: 10000
    start_sugar_reg: 3000
    reset_neighbors: 50

  loggers:
    wandb:
      enable: false
      project: "threestudio"
      name: None

  loss:
    # lambda_sds: 0.01
    lambda_rgb: 5000. # 5000
    lambda_mask: 500. # 500.
    lambda_dssim: 0.
    lambda_depth: 0. # 0.05
    lambda_depth_rel: 0. # [0, 0, 0.05, 100]
    lambda_normal: 0. # [0, 0, 0.05, 100]
    lambda_normal_smooth: 0.
    lambda_normal_depth_consistency: 0.

    lambda_normal_consistency: 10.
    lambda_laplacian_smoothing: 1.

    # For sugar
    lambda_opacity_max: 0.
    lambda_opacity_binary: 1.
    lambda_sugar_density_reg: 1.
    lambda_sugar_sdf_normal_reg: 1.

    # tv reg
    lambda_rgb_tv: 1.0
    lambda_normal_tv: 1.0
    lambda_depth_tv: 1.0

  optimizer:
    name: Adam
    args:
      lr: 0.01
      betas: [0.9, 0.99]
      eps: 1.e-8
    params:
      background:
        lr: 0.001

trainer:
  max_steps: 3000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 1000
  enable_progress_bar: true
  precision: 32

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
